name: Pysuite Integration Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{matrix.task}} (Python ${{matrix.python_version}})
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - task: pypkg
            py_version: 3.6
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{matrix.py_version}}
          activate-environment: test
      - name: set up dependencies
        shell: bash
        run: |
          export TASK="${{ matrix.task }}"
          eval "$(${CONDA}/condabin/conda shell.bash hook)"
          conda activate test
          pip install $GITHUB_WORKSPACE
          pip install -r $GITHUB_WORKSPACE/test_requirements.txt
      - name: set up credentials
        shell: bash
        env:
          client_id: ${{ secrets.client_id }}
          client_secret: ${{ secrets.client_secret }}
          drive_token: ${{ secrets.drive_token }}
          drive_refresh_token: ${{ secrets.drive_refresh_token }}
          gmail_token: ${{ secrets.gmail_token }}
          gmail_refresh_token: ${{ secrets.gmail_refresh_token }}
          sheets_token: ${{ secrets.sheets_token }}
          sheets_refresh_token: ${{ secrets.sheets_refresh_token }}
          token: ${{ secrets.token }}
          refresh_token: ${{ secrets.refresh_token }}
          gc_client_id: ${{ secrets.gc_client_id }}
          gc_private_key: ${{ secrets.gc_private_key }}
          gc_private_key_id: ${{ secrets.gc_private_key_id }}
        run: |
          $GITHUB_WORKSPACE/.ci/create_credentials.sh
      - name: run tests
        shell: bash
        run: |
          ${CONDA}/envs/test/bin/coverage run -m pytest $GITHUB_WORKSPACE/tests

  all-successful:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Report Success
        run: echo "CI completed"
